package com.iti.jet.gp.etbo5ly.model.pojo;
// Generated May 20, 2016 12:10:15 AM by Hibernate Tools 3.6.0

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Formula;
import org.hibernate.annotations.NamedNativeQueries;
import org.hibernate.annotations.NamedNativeQuery;

/**
 * Cook generated by hbm2java
 */
//@NamedNativeQueries({
//	@NamedNativeQuery(
//	name = "callCooksStoreProcedure",
//	query = "CALL nearbyCooks(:longitude,:latitude)",
//	resultClass = Cook.class
//	)
//})
@Entity
@Table(name = "cook", catalog = "etbo5ly"
)
@PrimaryKeyJoinColumn(name = "id")
public class Cook extends User implements java.io.Serializable {

    private CookStatus cookStatus;
    private Date startWorkingHours;
    private Date endWorkingHours;
    @JsonIgnore //aljazayeerly- to be igonred when converting from object to json
    private Set<Document> documents = new HashSet<Document>(0);
    @JsonIgnore //aljazayeerly- to be igonred when converting from object to json
    private Set<MenuItems> menuItems = new HashSet<MenuItems>(0);

    private Integer cookRate;

    public Cook() {
    }

    public Cook(CookStatus cookStatus) {
        this.cookStatus = cookStatus;
    }

    public Cook(CookStatus cookStatus, Date startWorkingHours, Date endWorkingHours, Set<Document> documents, Set<MenuItems> menuItemses) {
        this.cookStatus = cookStatus;
        this.startWorkingHours = startWorkingHours;
        this.endWorkingHours = endWorkingHours;
        this.documents = documents;
        this.menuItems = menuItemses;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "cook_status_id", nullable = false)
    public CookStatus getCookStatus() {
        return this.cookStatus;
    }

    public void setCookStatus(CookStatus cookStatus) {
        this.cookStatus = cookStatus;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "start_working_hours", length = 8)
    public Date getStartWorkingHours() {
        return this.startWorkingHours;
    }

    public void setStartWorkingHours(Date startWorkingHours) {
        this.startWorkingHours = startWorkingHours;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "end_working_hours", length = 8)
    public Date getEndWorkingHours() {
        return this.endWorkingHours;
    }

    public void setEndWorkingHours(Date endWorkingHours) {
        this.endWorkingHours = endWorkingHours;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cook")
    public Set<Document> getDocuments() {
        return this.documents;
    }

    public void setDocuments(Set<Document> documents) {
        this.documents = documents;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cook")
    public Set<MenuItems> getMenuItems() {
        return this.menuItems;
    }

    public void setMenuItems(Set<MenuItems> menuItemses) {
        this.menuItems = menuItemses;
    }

    @Formula("(SELECT FLOOR(avg(o.customer_rating)) from etbo5ly.order o,etbo5ly.cook c  where  o.cook_id= c.id and c.id= id )")
    public Integer getCookRate() {
        return cookRate;
    }

    public void setCookRate(Integer cookRate) {
        this.cookRate = cookRate;
    }

}
