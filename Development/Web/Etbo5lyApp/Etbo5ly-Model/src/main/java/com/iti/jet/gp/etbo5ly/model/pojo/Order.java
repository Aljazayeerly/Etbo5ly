package com.iti.jet.gp.etbo5ly.model.pojo;
// Generated May 6, 2016 12:05:20 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="order"
    ,catalog="mydb"
)
public class Order  implements java.io.Serializable {


     private Integer orderId;
     private User userByCookId;
     private User userByCustomerId;
     private String location;
     private Date orderTime;
     private int duration;
     private Short customerRating;
     private String orderComment;
     private Short cookRating;
     private String cookComment;
     private String type;
     private Set<OrderDetails> orderDetails = new HashSet<OrderDetails>(0);
     private Set<CateringDetails> cateringDetails = new HashSet<CateringDetails>(0);
     private Set<StatusHasOrder> statusHasOrders = new HashSet<StatusHasOrder>(0);

    public Order() {
    }

	
    public Order(User userByCookId, User userByCustomerId, String location, Date orderTime, int duration) {
        this.userByCookId = userByCookId;
        this.userByCustomerId = userByCustomerId;
        this.location = location;
        this.orderTime = orderTime;
        this.duration = duration;
    }
    public Order(User userByCookId, User userByCustomerId, String location, Date orderTime, int duration, Short customerRating, String orderComment, Short cookRating, String cookComment, String type, Set orderDetails, Set cateringDetails, Set statusHasOrders) {
       this.userByCookId = userByCookId;
       this.userByCustomerId = userByCustomerId;
       this.location = location;
       this.orderTime = orderTime;
       this.duration = duration;
       this.customerRating = customerRating;
       this.orderComment = orderComment;
       this.cookRating = cookRating;
       this.cookComment = cookComment;
       this.type = type;
       this.orderDetails = orderDetails;
       this.cateringDetails = cateringDetails;
       this.statusHasOrders = statusHasOrders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="order_id", unique=true, nullable=false)
    public Integer getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cook_id", nullable=false)
    public User getUserByCookId() {
        return this.userByCookId;
    }
    
    public void setUserByCookId(User userByCookId) {
        this.userByCookId = userByCookId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customer_id", nullable=false)
    public User getUserByCustomerId() {
        return this.userByCustomerId;
    }
    
    public void setUserByCustomerId(User userByCustomerId) {
        this.userByCustomerId = userByCustomerId;
    }

    
    @Column(name="location", nullable=false, length=100)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="order_time", nullable=false, length=19)
    public Date getOrderTime() {
        return this.orderTime;
    }
    
    public void setOrderTime(Date orderTime) {
        this.orderTime = orderTime;
    }

    
    @Column(name="duration", nullable=false)
    public int getDuration() {
        return this.duration;
    }
    
    public void setDuration(int duration) {
        this.duration = duration;
    }

    
    @Column(name="customer_rating")
    public Short getCustomerRating() {
        return this.customerRating;
    }
    
    public void setCustomerRating(Short customerRating) {
        this.customerRating = customerRating;
    }

    
    @Column(name="order_comment", length=150)
    public String getOrderComment() {
        return this.orderComment;
    }
    
    public void setOrderComment(String orderComment) {
        this.orderComment = orderComment;
    }

    
    @Column(name="cook_rating")
    public Short getCookRating() {
        return this.cookRating;
    }
    
    public void setCookRating(Short cookRating) {
        this.cookRating = cookRating;
    }

    
    @Column(name="cook_comment", length=150)
    public String getCookComment() {
        return this.cookComment;
    }
    
    public void setCookComment(String cookComment) {
        this.cookComment = cookComment;
    }

    
    @Column(name="type", length=45)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<OrderDetails> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetails> orderDetails) {
        this.orderDetails = orderDetails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<CateringDetails> getCateringDetails() {
        return this.cateringDetails;
    }
    
    public void setCateringDetails(Set<CateringDetails> cateringDetails) {
        this.cateringDetails = cateringDetails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<StatusHasOrder> getStatusHasOrders() {
        return this.statusHasOrders;
    }
    
    public void setStatusHasOrders(Set<StatusHasOrder> statusHasOrders) {
        this.statusHasOrders = statusHasOrders;
    }




}


