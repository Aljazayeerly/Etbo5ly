package com.iti.jet.gp.etbo5ly.model.pojo;
// Generated May 6, 2016 12:05:20 PM by Hibernate Tools 4.3.1



import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.springframework.context.annotation.PropertySource;

/**
 * MenuItems generated by hbm2java
 */
@Entity
@Table(name="menu_items",catalog = "etbo5ly")
//@NamedQueries({
//    
//    @NamedQuery(name = "MenuItems.findMealByName", query = "SELECT m FROM menu_items WHERE m.name_en = :nameEn"),
//    })

public class MenuItems  implements java.io.Serializable {


     private Integer itemId;
     private Cook cook;
     private String nameEn;
     private String nameAr;
     private float price;
     private byte[] image;
     private String descriptionEn;
     private String descriptionAr;
     private Short itemRate;
     private Set<Tags> tagses = new HashSet<Tags>(0);
     private Set<OrderDetails> orderDetails = new HashSet<OrderDetails>(0);
     private Set<Category> categories = new HashSet<Category>(0);

    public MenuItems() {
    }

	
    public MenuItems(Cook cook, String nameEn, String nameAr, float price, String descriptionEn, String descriptionAr) {
        this.cook = cook;
        this.nameEn = nameEn;
        this.nameAr = nameAr;
        this.price = price;
        this.descriptionEn = descriptionEn;
        this.descriptionAr = descriptionAr;
    }
    public MenuItems(Cook cook, String nameEn, String nameAr, float price, byte[] image, String descriptionEn, String descriptionAr, Short itemRate, Set tagses, Set orderDetails, Set categories) {
       this.cook = cook;
       this.nameEn = nameEn;
       this.nameAr = nameAr;
       this.price = price;
       this.image = image;
       this.descriptionEn = descriptionEn;
       this.descriptionAr = descriptionAr;
       this.itemRate = itemRate;
       this.tagses = tagses;
       this.orderDetails = orderDetails;
       this.categories = categories;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="item_id", unique=true, nullable=false)
    public Integer getItemId() {
        return this.itemId;
    }
    
    public void setItemId(Integer itemId) {
        this.itemId = itemId;
    }

@ManyToOne(fetch=FetchType.EAGER)//salma-changed it to eager
    @JoinColumn(name="cook_id", nullable=false)
    public Cook getCook() {
        return this.cook;
    }
    
    public void setCook(Cook cook) {
        this.cook = cook;
    }

    
    @Column(name="name_en", nullable=false, length=45)
    public String getNameEn() {
        return this.nameEn;
    }
    
    public void setNameEn(String nameEn) {
        this.nameEn = nameEn;
    }

    
    @Column(name="name_ar", nullable=false, length=45)
    public String getNameAr() {
        return this.nameAr;
    }
    
    public void setNameAr(String nameAr) {
        this.nameAr = nameAr;
    }

    
    @Column(name="price", nullable=false, precision=12, scale=0)
    public float getPrice() {
        return this.price;
    }
    
    public void setPrice(float price) {
        this.price = price;
    }

    
    @Column(name="image")
    public byte[] getImage() {
        return this.image;
    }
    
    public void setImage(byte[] image) {
        this.image = image;
    }

    
    @Column(name="description_en", nullable=false, length=200)
    public String getDescriptionEn() {
        return this.descriptionEn;
    }
    
    public void setDescriptionEn(String descriptionEn) {
        this.descriptionEn = descriptionEn;
    }

    
    @Column(name="description_ar", nullable=false, length=200)
    public String getDescriptionAr() {
        return this.descriptionAr;
    }
    
    public void setDescriptionAr(String descriptionAr) {
        this.descriptionAr = descriptionAr;
    }

    
    @Column(name="item_rate")
    public Short getItemRate() {
        return this.itemRate;
    }
    
    public void setItemRate(Short itemRate) {
        this.itemRate = itemRate;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tags_has_menu_items", catalog="mydb", joinColumns = { 
        @JoinColumn(name="menu_item_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tags_tag_id", nullable=false, updatable=false) })
  @JsonIgnore //salma-added
    public Set<Tags> getTagses() {
        return this.tagses;
    }
    
    public void setTagses(Set<Tags> tagses) {
        this.tagses = tagses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="menuItems")
  @JsonIgnore //salma-added
    public Set<OrderDetails> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetails> orderDetails) {
        this.orderDetails = orderDetails;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="category_has_menu_items", catalog="mydb", joinColumns = { 
        @JoinColumn(name="menu_items_item_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="category_category_id", nullable=false, updatable=false) })
  @JsonIgnore
    public Set<Category> getCategories() {
        return this.categories;
    }
    
    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }




}


